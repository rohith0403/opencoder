{"version":3,"sources":["reducers/auth.js","reducers/message.js","reducers/users.js","actions/types.js","reducers/questions.js","reducers/index.js","store.js","services/auth.service.js","components/Login.js","actions/auth.js","components/Register.js","services/auth-header.js","services/user.service.js","context/GlobalState.js","components/Home.js","components/Profile.js","components/AddUser.js","actions/users.js","components/User.js","components/UsersList.js","services/question.service.js","components/AddQuestion.js","actions/questions.js","components/QuestionsList.js","components/Question.js","components/defaultCode.js","reducers/editorcode.js","components/Options.js","components/Output.js","components/Editor.js","helpers/history.js","common/EventBus.js","App.js","actions/message.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","userInitialState","userReducer","users","action","type","payload","map","id","filter","questionInitialState","questionReducer","questions","question","combineReducers","auth","state","message","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","API_URL","username","email","password","axios","post","then","response","data","accessToken","setItem","stringify","removeItem","required","value","className","role","Login","props","form","useRef","checkBtn","useState","setUsername","setPassword","loading","setLoading","useSelector","dispatch","useDispatch","to","src","alt","onSubmit","e","preventDefault","current","validateAll","context","_errors","length","AuthService","Promise","resolve","error","toString","reject","login","history","push","window","location","reload","catch","ref","htmlFor","name","onChange","target","validations","disabled","style","display","validEmail","isEmail","vusername","vpassword","Register","setEmail","successful","setSuccessful","register","authHeader","toStore","UserService","getPublicContent","get","createUser","headers","updateUser","put","getUser","getAllusers","deleteUser","delete","findByUsername","Home","content","setContent","useEffect","_content","Profile","currentUser","substring","substr","roles","index","key","AddUser","initialUserState","submitted","setUser","setSubmitted","handleInputChange","event","changeRole","a","onClick","Dropdown","Toggle","variant","Menu","Item","href","UserDataService","res","console","log","User","setcurrentUser","setMessage","match","params","x","_id","UsersList","currentIndex","setCurrentIndex","searchUsername","setsearchUsername","placeholder","setActiveUser","Badge","bg","text","QuestionDataService","createQuestion","updateQuestion","getQuestion","getAllQuestions","deleteQuestion","findByQuestionname","qname","getQuestionByProf","userDetails","AddQuestion","initialQuestionState","userId","description","setQuestion","QuestionsList","currentQuestion","setcurrentQuestion","searchQname","setsearchQname","Question","code","result","input","lang","GlobalContext","createContext","GlobalProvider","children","useReducer","editorcode","Provider","handleCodeChange","handleLangChange","input_data","displayOutput","output","download","element","document","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","storePreviousInput","loadPreviousInput","lastInput","Options","useContext","alert","err","options","label","option","OutputArea","CodeArea","onCodeChangeHandler","width","height","theme","selectOnLineNumbers","renderIndentGuides","colorDecorators","cursorBlinking","autoClosingQuotes","find","autoFindInSelection","snippetSuggestions","newCode","editorDidMount","Output","createBrowserHistory","eventBus","on","callback","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","App","showModeratorBoard","setShowModeratorBoard","showAdminBoard","setShowAdminBoard","showStudentBoard","setShowStudentBoard","listen","logOut","useCallback","includes","EventBus","exact","path","component","Editor","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.97a6223d.chunk.js","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n} from \"../actions/types\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"../actions/types\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import {\n    CREATE_USER,\n    RETRIEVE_USERS,\n    GET_USER,\n    UPDATE_USER,\n    DELETE_USER,\n  } from \"../actions/types\";\n  \n  const userInitialState = [];\n  \n  function userReducer(users = userInitialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case CREATE_USER:\n        return [...users, payload];\n      case GET_USER:\n        return payload;\n\n      case RETRIEVE_USERS:\n        return payload;\n  \n      case UPDATE_USER:\n        return users.map((user) => {\n          if (user.id === payload.id) {\n            return {\n              ...user,\n              ...payload,\n            };\n          } else {\n            return user;\n          }\n        });\n  \n      case DELETE_USER:\n        return users.filter(({ id }) => id !== payload.id);\n  \n      default:\n        return users;\n    }\n  };\n  \n  export default userReducer;","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n\nexport const CREATE_USER = \"CREATE_USER\";\nexport const GET_USER = \"GET_USER\";\nexport const RETRIEVE_USERS = \"RETRIEVE_USERS\";\nexport const UPDATE_USER = \"UPDATE_USER\";\nexport const DELETE_USER = \"DELETE_USER\";\n\nexport const CREATE_QUESTION = \"CREATE_QUESTION\";\nexport const GET_QUESTION = \"GET_QUESTION\";\nexport const RETRIEVE_QUESTIONS = \"RETRIEVE_QUESTIONS\";\nexport const UPDATE_QUESTION = \"UPDATE_QUESTION\";\nexport const DELETE_QUESTION = \"DELETE_QUESTION\";\n\nexport const DISPLAY_OUTPUT = \"DISPLAY_OUTPUT\";\nexport const CODE_CHANGE  = \"CODE_CHANGE\";\nexport const PREVIOUS_INPUT = \"PREVIOUS_INPUT\";\nexport const INPUT_CHANGE = \"INPUT_CHANGE\";\nexport const LANG_CHANGE = \"LANG_CHANGE\";\n","import {\n    CREATE_QUESTION,\n    RETRIEVE_QUESTIONS,\n    GET_QUESTION,\n    UPDATE_QUESTION,\n    DELETE_QUESTION,\n  } from \"../actions/types\";\n  \n  const questionInitialState = [];\n  \n  function questionReducer(questions = questionInitialState, action) {\n    const { type, payload } = action;\n  \n    switch (type) {\n      case CREATE_QUESTION:\n        return [...questions, payload];\n      case GET_QUESTION:\n        return payload;\n\n      case RETRIEVE_QUESTIONS:\n        return payload;\n  \n      case UPDATE_QUESTION:\n        return questions.map((question) => {\n          if (question.id === payload.id) {\n            return {\n              ...question,\n              ...payload,\n            };\n          } else {\n            return question;\n          }\n        });\n  \n      case DELETE_QUESTION:\n        return questions.filter(({ id }) => id !== payload.id);\n  \n      default:\n        return questions;\n    }\n  };\n  \n  export default questionReducer;","import { combineReducers } from \"redux\";\nimport auth from \"./auth\";\nimport message from \"./message\";\nimport users from \"./users\";\nimport questions from \"./questions\";\n\nexport default combineReducers({\n  auth,\n  message,\n  users,\n  questions,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst userInitialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  userInitialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from \"axios\";\n\nconst API_URL = \"http://192.168.1.8:8080/api/auth/\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  return axios\n    .post(API_URL + \"signin\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      if (response.data.accessToken) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }\n\n      return response.data;\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { login } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst Login = (props) => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { isLoggedIn } = useSelector(state => state.auth);\n  const { message } = useSelector(state => state.message);\n\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleLogin = (e) => {\n    e.preventDefault();\n\n    setLoading(true);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(login(username, password))\n        .then(() => {\n          props.history.push(\"/profile\");\n          window.location.reload();\n        })\n        .catch(() => {\n          setLoading(false);\n        });\n    } else {\n      setLoading(false);\n    }\n  };\n\n  if (isLoggedIn) {\n    return <Redirect to=\"/profile\" />;\n  }\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleLogin} ref={form}>\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <Input\n              type=\"text\"\n              className=\"form-control\"\n              name=\"username\"\n              value={username}\n              onChange={onChangeUsername}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <Input\n              type=\"password\"\n              className=\"form-control\"\n              name=\"password\"\n              value={password}\n              onChange={onChangePassword}\n              validations={[required]}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <button className=\"btn btn-primary btn-block\" disabled={loading}>\n              {loading && (\n                <span className=\"spinner-border spinner-border-sm\"></span>\n              )}\n              <span>Login</span>\n            </button>\n          </div>\n\n          {message && (\n            <div className=\"form-group\">\n              <div className=\"alert alert-danger\" role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n  return AuthService.register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { register } from \"../actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst validEmail = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nconst Register = () => {\n  const form = useRef();\n  const checkBtn = useRef();\n\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [successful, setSuccessful] = useState(false);\n\n  const { message } = useSelector(state => state.message);\n  const dispatch = useDispatch();\n\n  const onChangeUsername = (e) => {\n    const username = e.target.value;\n    setUsername(username);\n  };\n\n  const onChangeEmail = (e) => {\n    const email = e.target.value;\n    setEmail(email);\n  };\n\n  const onChangePassword = (e) => {\n    const password = e.target.value;\n    setPassword(password);\n  };\n\n  const handleRegister = (e) => {\n    e.preventDefault();\n\n    setSuccessful(false);\n\n    form.current.validateAll();\n\n    if (checkBtn.current.context._errors.length === 0) {\n      dispatch(register(username, email, password))\n        .then(() => {\n          setSuccessful(true);\n        })\n        .catch(() => {\n          setSuccessful(false);\n        });\n    }\n  };\n\n  return (\n    <div className=\"col-md-12\">\n      <div className=\"card card-container\">\n        <img\n          src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n          alt=\"profile-img\"\n          className=\"profile-img-card\"\n        />\n\n        <Form onSubmit={handleRegister} ref={form}>\n          {!successful && (\n            <div>\n              <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"username\"\n                  value={username}\n                  onChange={onChangeUsername}\n                  validations={[required, vusername]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <Input\n                  type=\"text\"\n                  className=\"form-control\"\n                  name=\"email\"\n                  value={email}\n                  onChange={onChangeEmail}\n                  validations={[required, validEmail]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <Input\n                  type=\"password\"\n                  className=\"form-control\"\n                  name=\"password\"\n                  value={password}\n                  onChange={onChangePassword}\n                  validations={[required, vpassword]}\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <button className=\"btn btn-primary btn-block\">Sign Up</button>\n              </div>\n            </div>\n          )}\n\n          {message && (\n            <div className=\"form-group\">\n              <div className={ successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                {message}\n              </div>\n            </div>\n          )}\n          <CheckButton style={{ display: \"none\" }} ref={checkBtn} />\n        </Form>\n      </div>\n    </div>\n  );\n};\n\nexport default Register;\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // For Spring Boot back-end\n    // return { Authorization: \"Bearer \" + user.accessToken };\n\n    // for Node.js Express back-end\n    return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://192.168.1.8:8080/api/test/\";\n\nconst getPublicContent = () => {\n  return axios.get(API_URL + \"all\");\n};\n\nconst createUser = (data) =>{\n  return axios.post(API_URL + `users`, data, { headers: authHeader() });\n}\n\nconst updateUser = (id,data) =>{\n  return axios.put(API_URL + `users/${id}`, data, { headers: authHeader() });\n}\n\nconst getUser = (id) =>{\n  return axios.get(API_URL+`users/${id}`,{ headers: authHeader() });\n}\n\nconst getAllusers = () => {\n  return axios.get(API_URL+'users',{ headers: authHeader() });\n};\n\nconst deleteUser = (id) => {\n  return axios.delete(API_URL + `users/${id}`, { headers: authHeader() });\n};\n\nconst findByUsername = (username) => {\n  return axios.get(API_URL + `users?username=${username}`, { headers: authHeader() });\n};\n\nconst UserService = {\n  getPublicContent,\n  createUser,\n  updateUser,\n  getUser,\n  getAllusers,\n  deleteUser,\n  findByUsername,\n};\n\nexport default UserService;","import React, { createContext, useReducer } from \"react\";\nimport editorcode from \"../reducers/editorcode\";\nimport { code } from \"../components/defaultCode\";\n\n// Initial State\nconst initialState = {\n  code: code.cpp,\n  result: \"Run and Submit code to see result\",\n  lang: \"python\",\n  input: \"Enter your input\"\n};\n\nvar toStore;\n\n// Create Context\nexport const GlobalContext = createContext(initialState);\n\n// Provider Component\nexport const GlobalProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(editorcode, initialState);\n\n  //Actions\n  function handleCodeChange(code) {\n    dispatch({\n      type: \"CODE_CHANGE\",\n      payload: code\n    });\n  }\n\n  function handleLangChange(input) {\n    dispatch({\n      type: \"LANG_CHANGE\",\n      payload: input\n    });\n  }\n\n  function handleInputChange(input_data) {\n    toStore = input_data;\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      payload: input_data\n    });\n  }\n\n  function storePreviousInput() {\n    console.log(toStore, \"this is stored\");\n    localStorage.setItem(\"lastInput\", toStore ? toStore : \"\");\n  }\n\n  function loadPreviousInput() {\n    var lastInput =\n      localStorage.getItem(\"lastInput\") != \"\"\n        ? localStorage.getItem(\"lastInput\")\n        : \"\";\n\n    dispatch({\n      type: \"PREVIOUS_INPUT\",\n      payload: lastInput\n    });\n  }\n\n  function displayOutput(output) {\n    dispatch({\n      type: \"DISPLAY_OUTPUT\",\n      payload: output\n    });\n  }\n\n  function download() {\n    var element = document.createElement(\"a\");\n    console.log(state.code);\n    element.setAttribute(\n      \"href\",\n      \"data:text/plain;charset=utf-8,\" + encodeURIComponent(state.code)\n    );\n    element.setAttribute(\"download\", \"code.txt\");\n\n    element.style.display = \"none\";\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        code: state.code,\n        lang: state.lang,\n        result: state.result,\n        input: state.input,\n        handleCodeChange,\n        handleLangChange,\n        handleInputChange,\n        displayOutput,\n        download,\n        storePreviousInput,\n        loadPreviousInput\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};","import React, { useState, useEffect } from \"react\";\n\nimport UserService from \"../services/user.service\";\n\nconst Home = () => {\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    UserService.getPublicContent().then(\n      (response) => {\n        setContent(response.data);\n      },\n      (error) => {\n        const _content =\n          (error.response && error.response.data) ||\n          error.message ||\n          error.toString();\n\n        setContent(_content);\n      }\n    );\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>{content}</h3>\n      </header>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { useSelector } from \"react-redux\";\n\nconst Profile = () => {\n  const { user: currentUser } = useSelector((state) => state.auth);\n\n  if (!currentUser) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <div className=\"container\">\n      <header className=\"jumbotron\">\n        <h3>\n          <strong>{currentUser.username}</strong> Profile\n        </h3>\n      </header>\n      <p>\n        <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n        {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n      </p>\n      <p>\n        <strong>Id:</strong> {currentUser.id}\n      </p>\n      <p>\n        <strong>Email:</strong> {currentUser.email}\n      </p>\n      <strong>Authorities:</strong>\n      <ul>\n        {currentUser.roles &&\n          currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n      </ul>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createUser } from \"../actions/users\";\nimport { Dropdown } from 'react-bootstrap';\n\nconst AddUser = () => {\n  const initialUserState = {\n    id: null,\n    username: \"\",\n    email:\"\",\n    password:\"\",\n    roles:[],\n    submitted: false\n  };\n  const [user, setUser] = useState(initialUserState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    // console.log(name, value);\n    setUser({ ...user, [name]: value });\n  };\nconst  changeRole = async (role) => {\n    let roles = [role];\n    await setUser({ ...user, roles: roles });\n    // console.log(user);\n  };\n  const saveUser = () => {\n    const { username,email,password,roles } = user;\n    // console.log(user);\n    dispatch(createUser(username,email,password,roles))\n      .then(data => {\n        setUser({\n          username : data.username,\n          email : data.email,\n          password : data.password,\n          roles: data.roles,\n        });\n        setSubmitted(true);\n\n        console.log(data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newUser = () => {\n    setUser(initialUserState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newUser}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n\n          <div className=\"dropdown\" id=\"roleDropdown\">\n          <Dropdown>\n            <Dropdown.Toggle \n            variant=\"success\" \n            id=\"roles\"\n            value={user.roles}\n            onChange={handleInputChange}\n            name=\"roles\"\n            >\n              Roles\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              <Dropdown.Item href=\"#\" onClick={()=>{changeRole(\"admin\")}}>admin</Dropdown.Item>\n              <Dropdown.Item href=\"#\" onClick={()=>{changeRole(\"professor\")}}>professor</Dropdown.Item>\n              <Dropdown.Item href=\"#\" onClick={()=>{changeRole(\"student\")}}>student</Dropdown.Item>\n            </Dropdown.Menu>\n          </Dropdown>\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"username\">Username</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"username\"\n              required\n              value={user.username}\n              onChange={handleInputChange}\n              name=\"username\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"email\"\n                required\n                value={user.email}\n                onChange={handleInputChange}\n                name=\"email\"\n              />\n          </div>\n\n          <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"password\"\n                required\n                value={user.password}\n                onChange={handleInputChange}\n                name=\"password\"\n              />\n          </div>\n\n          <button onClick={saveUser} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddUser;","import {\n    CREATE_USER,\n    GET_USER,\n    RETRIEVE_USERS,\n    UPDATE_USER,\n    DELETE_USER,\n  } from \"./types\";\n  \n  import UserDataService from \"../services/user.service\";\n  \n  export const createUser = (username,email,password,roles) => async (dispatch) => {\n    try {\n      const data = {\n        username:username,\n        email:email,\n        password:password,\n        roles:roles\n      }\n      const res = await UserDataService.createUser(data);\n  \n      dispatch({\n        type: CREATE_USER,\n        payload: res.data,\n      });\n  \n      return Promise.resolve(res.data);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n  export const getUser = (id) => async (dispatch) => {\n    try {\n      console.log(\"GETTUNF\");\n      const res = await UserDataService.getUser(id);\n      console.log(\"RES \", res);\n      dispatch({\n        type: GET_USER,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  export const retrieveUsers = () => async (dispatch) => {\n    try {\n      const res = await UserDataService.getAllusers();\n\n      dispatch({\n        type: RETRIEVE_USERS,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  export const updateUser = (id, data) => async (dispatch) => {\n    try {\n      const res = await UserDataService.updateUser(id, data);\n  \n      dispatch({\n        type: UPDATE_USER,\n        payload: data,\n      });\n  \n      return Promise.resolve(res.data);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n  \n  export const deleteUser = (id) => async (dispatch) => {\n    try {\n      await UserDataService.deleteUser(id);\n  \n      dispatch({\n        type: DELETE_USER,\n        payload: { id },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  export const findUsersByUsername = (username) => async (dispatch) => {\n    try {\n      const res = await UserDataService.findByUsername(username);\n  \n      dispatch({\n        type: RETRIEVE_USERS,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUser, deleteUser } from \"../actions/users\";\nimport UserDataService from \"../services/user.service\";\n\nconst User = (props) => {\n  const initialUserState = {\n    id: null,\n    username: \"\",\n    email: \"\",\n    password:\"\",\n  };\n  const [currentUser, setcurrentUser] = useState(initialUserState);\n  const [message, setMessage] = useState(\"\");\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n\n  const getUser = id => {\n    if (users.length !== 0){\n      console.log(users);\n      if(users.filter( x  => x._id=== id)) {\n        // TODO: 505 code\n      }\n      setcurrentUser(users.filter( x  => x._id=== id)[0]);\n    }\n    else{\n    UserDataService.getUser(id)\n      .then(response => {\n        setcurrentUser(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n    }\n  };\n  useEffect(() => {\n    getUser(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setcurrentUser({ ...currentUser, [name]: value });\n  };\n\n  const updateContent = () => {\n    dispatch(updateUser(currentUser._id, currentUser))\n      .then(response => {\n        console.log(response);\n\n        setMessage(\"The user was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const removeUser = () => {\n    dispatch(deleteUser(currentUser._id))\n      .then(() => {\n        props.history.push(\"/users\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentUser ? (\n        <div className=\"edit-form\">\n          <h4>User</h4>\n          <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"username\">Username</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"username\"\n                    value={currentUser.username}\n                    onChange={handleInputChange}\n                    name=\"username\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"email\">Email</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"email\"\n                  value={currentUser.email}\n                  onChange={handleInputChange}\n                  name=\"email\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"password\">Password</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"password\"\n                  value={currentUser.password}\n                  onChange={handleInputChange}\n                  name=\"password\"\n                />\n            </div>\n          </form>\n\n          <button className=\"badge badge-danger mr-2\" onClick={removeUser}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateContent}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a User...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default User;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  retrieveUsers,\n  findUsersByUsername,\n} from \"../actions/users\";\nimport { Link } from \"react-router-dom\";\nimport { Badge } from 'react-bootstrap';\n\nconst UsersList = () => {\n  const [currentUser, setcurrentUser] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchUsername, setsearchUsername] = useState(\"\");\n\n  const users = useSelector(state => state.users);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(retrieveUsers());\n  }, []);\n\n  const onChangesearchUsername = e => {\n    const searchUsername = e.target.value;\n    setsearchUsername(searchUsername);\n  };\n\n  const refreshData = () => {\n    setcurrentUser(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveUser = (user, index) => {\n    setcurrentUser(user);\n    setCurrentIndex(index);\n  };\n\n  const findByUsername = () => {\n    refreshData();\n    dispatch(findUsersByUsername(searchUsername));\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by username\"\n            value={searchUsername}\n            onChange={onChangesearchUsername}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByUsername}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Users List</h4>\n\n        <ul className=\"list-group\">\n          {users &&\n            users.map((user, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => setActiveUser(user, index)}\n                key={index}\n              >\n                {user.username}\n              </li>\n            ))}\n        </ul>\n\n      </div>\n      <div className=\"col-md-6\">\n        {currentUser ? (\n          <div>\n            <h4>User</h4>\n            <div>\n              <label>\n                <strong>Username:</strong>\n              </label>{\" \"}\n              {currentUser.username}\n            </div>\n            <div>\n              <label>\n                <strong>Email:</strong>\n              </label>{\" \"}\n              {currentUser.email}\n            </div>\n            <Link\n              to={\"/users/\" + currentUser._id}\n              className=\"badge badge-warning\"\n            >\n            <Badge bg=\"warning\" text=\"dark\">\n              Edit\n            </Badge>{' '}\n            </Link>\n\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a User...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default UsersList;","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://192.168.1.8:8080/api/test/\";\n\nconst createQuestion = (data) =>{\n  return axios.post(API_URL + `questions`, data, { headers: authHeader() });\n}\n\nconst updateQuestion = (id,data) =>{\n  return axios.put(API_URL + `questions/${id}`, data, { headers: authHeader() });\n}\n\nconst getQuestion = (id) =>{\n  return axios.get(API_URL+`questions/${id}`,{ headers: authHeader() });\n}\n\nconst getAllQuestions = () => {\n  return axios.get(API_URL+'questions',{ headers: authHeader() });\n};\n\nconst deleteQuestion = (id) => {\n  return axios.delete(API_URL + `questions/${id}`, { headers: authHeader() });\n};\n\nconst findByQuestionname = (qname) => {\n  return axios.get(API_URL + `questions?qname=${qname}`, { headers: authHeader() });\n};\n\nconst getQuestionByProf = (id) => {\n  return axios.get(API_URL + `questions?userId=${id}`, { headers: authHeader() });\n};\n\n\nconst QuestionDataService = {\n  createQuestion,\n  updateQuestion,\n  getQuestion,\n  getAllQuestions,\n  deleteQuestion,\n  findByQuestionname,\n  getQuestionByProf,\n};\n\nexport default QuestionDataService;","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { createQuestion } from \"../actions/questions\";\nlet userDetails = JSON.parse(localStorage.getItem(\"user\"));\nconst AddQuestion = () => {\n  const initialQuestionState = {\n    id: null,\n    userId: userDetails.id,\n    qname:\"\",\n    description:\"\",\n    submitted: false\n  };\n  const [question, setQuestion] = useState(initialQuestionState);\n  const [submitted, setSubmitted] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    // console.log(name, value);\n    setQuestion({ ...question, [name]: value });\n  };\n  const saveQuestion = () => {\n    const { userId,qname,description} = question;\n    dispatch(createQuestion(userId,qname,description))\n      .then(data => {\n        setQuestion({\n          userId:userDetails.id,\n          qname : data.qname,\n          description : data.description,\n        });\n        setSubmitted(true);\n\n        console.log(data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const newQuestion = () => {\n    setQuestion(initialQuestionState);\n    setSubmitted(false);\n  };\n\n  return (\n    <div className=\"submit-form\">\n      {submitted ? (\n        <div>\n          <h4>You submitted successfully!</h4>\n          <button className=\"btn btn-success\" onClick={newQuestion}>\n            Add\n          </button>\n        </div>\n      ) : (\n        <div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"qname\">Question Name</label>\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              id=\"qname\"\n              required\n              value={question.qname}\n              onChange={handleInputChange}\n              name=\"qname\"\n            />\n          </div>\n\n          <div className=\"form-group\">\n                <label htmlFor=\"description\">Question</label>\n                <input\n                type=\"text\"\n                className=\"form-control\"\n                id=\"description\"\n                required\n                value={question.description}\n                onChange={handleInputChange}\n                name=\"description\"\n              />\n          </div>\n\n          <button onClick={saveQuestion} className=\"btn btn-success\">\n            Submit\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AddQuestion;","import {\n    CREATE_QUESTION,\n    GET_QUESTION,\n    RETRIEVE_QUESTIONS,\n    UPDATE_QUESTION,\n    DELETE_QUESTION,\n  } from \"./types\";\n  \n  import QuestionDataService from \"../services/question.service\";\n  \n  export const createQuestion = (userId,qname,description) => async (dispatch) => {\n    try {\n      const data = {\n        userId:userId,\n        qname:qname,\n        description:description,\n      }\n      console.log(data);\n      const res = await QuestionDataService.createQuestion(data);\n      dispatch({\n        type: CREATE_QUESTION,\n        payload: res.data,\n      });\n  \n      return Promise.resolve(res.data);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n  export const getQuestion = (id) => async (dispatch) => {\n    try {\n      console.log(\"GETTUNF\");\n      const res = await QuestionDataService.getQuestion(id);\n      console.log(\"RES \", res);\n      dispatch({\n        type: GET_QUESTION,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  export const retrieveQuestions = () => async (dispatch) => {\n    try {\n      const res = await QuestionDataService.getAllQuestions();\n\n      dispatch({\n        type: RETRIEVE_QUESTIONS,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  export const retrieveProfQuestions = (id) => async (dispatch) => {\n    try {\n      const res = await QuestionDataService.getQuestionByProf(id);\n\n      dispatch({\n        type: RETRIEVE_QUESTIONS,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  export const updateQuestion = (id, data) => async (dispatch) => {\n    try {\n      const res = await QuestionDataService.updateQuestion(id, data);\n  \n      dispatch({\n        type: UPDATE_QUESTION,\n        payload: data,\n      });\n  \n      return Promise.resolve(res.data);\n    } catch (err) {\n      return Promise.reject(err);\n    }\n  };\n  \n  export const deleteQuestion = (id) => async (dispatch) => {\n    try {\n      await QuestionDataService.deleteQuestion(id);\n  \n      dispatch({\n        type: DELETE_QUESTION,\n        payload: { id },\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  \n  export const findQuestionsByQname = (qname) => async (dispatch) => {\n    try {\n      const res = await QuestionDataService.findByQuestionname(qname);\n  \n      dispatch({\n        type: RETRIEVE_QUESTIONS,\n        payload: res.data,\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  };","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  findQuestionsByQname,\n  retrieveProfQuestions,\n} from \"../actions/questions\";\nimport { Link } from \"react-router-dom\";\nimport { Badge } from 'react-bootstrap';\nlet userDetails = JSON.parse(localStorage.getItem(\"user\"));\n\nconst QuestionsList = () => {\n  const [currentQuestion, setcurrentQuestion] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [searchQname, setsearchQname] = useState(\"\");\n\n  const questions = useSelector(state => state.questions);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(retrieveProfQuestions(userDetails.id));\n  }, []);\n\n  const onChangesearchQName = e => {\n    const searchQname = e.target.value;\n    setsearchQname(searchQname);\n  };\n\n  const refreshData = () => {\n    setcurrentQuestion(null);\n    setCurrentIndex(-1);\n  };\n\n  const setActiveUser = (question, index) => {\n    setcurrentQuestion(question);\n    setCurrentIndex(index);\n  };\n\n  const findByQName = () => {\n    refreshData();\n    dispatch(findQuestionsByQname(searchQname));\n  };\n\n  return (\n    <div className=\"list row\">\n      <div className=\"col-md-8\">\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            placeholder=\"Search by question name\"\n            value={searchQname}\n            onChange={onChangesearchQName}\n          />\n          <div className=\"input-group-append\">\n            <button\n              className=\"btn btn-outline-secondary\"\n              type=\"button\"\n              onClick={findByQName}\n            >\n              Search\n            </button>\n          </div>\n        </div>\n      </div>\n      <div className=\"col-md-6\">\n        <h4>Questions List</h4>\n\n        <ul className=\"list-group\">\n          {questions &&\n            questions.map((question, index) => (\n              <li\n                className={\n                  \"list-group-item \" + (index === currentIndex ? \"active\" : \"\")\n                }\n                onClick={() => setActiveUser(question, index)}\n                key={index}\n              >\n                {question.qname}\n              </li>\n            ))}\n        </ul>\n\n      </div>\n      <div className=\"col-md-6\">\n        {currentQuestion ? (\n          <div>\n            <h4>Question</h4>\n            <div>\n              <label>\n                <strong>Qusetion Name:</strong>\n              </label>{\" \"}\n              {currentQuestion.qname}\n            </div>\n            <div>\n              <label>\n                <strong>Question:</strong>\n              </label>{\" \"}\n              {currentQuestion.description}\n            </div>\n            <Link\n              to={\"/questions/\" + currentQuestion._id}\n              className=\"badge badge-warning\"\n            >\n            <Badge bg=\"warning\" text=\"dark\">\n              Edit\n            </Badge>{' '}\n            </Link>\n\n          </div>\n        ) : (\n          <div>\n            <br />\n            <p>Please click on a User...</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default QuestionsList;","import React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateQuestion, deleteQuestion } from \"../actions/questions\";\nimport QuestionDataService from \"../services/question.service\";\n\nconst Question = (props) => {\n  const initialQuestionState = {\n    id: null,\n    qname:\"\",\n    description:\"\",\n    submitted: false\n  };\n  const [currentQuestion, setcurrentQuestion] = useState(initialQuestionState);\n  const [message, setMessage] = useState(\"\");\n  const questions = useSelector(state => state.questions);\n  const dispatch = useDispatch();\n\n  const getQuestion = id => {\n    if (questions.length !== 0){\n      if(questions.filter( x  => x._id=== id)) {\n        // TODO: 505 code\n      }\n      setcurrentQuestion(questions.filter( x  => x._id=== id)[0]);\n    }\n    else{\n    QuestionDataService.getQuestion(id)\n      .then(response => {\n        setcurrentQuestion(response.data);\n        console.log(response.data);\n      })\n      .catch(e => {\n        console.log(e);\n      });\n    }\n  };\n  useEffect(() => {\n    getQuestion(props.match.params.id);\n  }, [props.match.params.id]);\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setcurrentQuestion({ ...currentQuestion, [name]: value });\n  };\n\n  const updateContent = () => {\n    dispatch(updateQuestion(currentQuestion._id, currentQuestion))\n      .then(response => {\n        console.log(response);\n\n        setMessage(\"The question was updated successfully!\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  const removeQuestion = () => {\n      console.log(currentQuestion._id);\n    dispatch(deleteQuestion(currentQuestion._id))\n      .then(() => {\n        props.history.push(\"/questions\");\n      })\n      .catch(e => {\n        console.log(e);\n      });\n  };\n\n  return (\n    <div>\n      {currentQuestion ? (\n        <div className=\"edit-form\">\n          <h4>Question</h4>\n          <form>\n            <div className=\"form-group\">\n                <label htmlFor=\"qname\">Question Name</label>\n                <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    id=\"qname\"\n                    value={currentQuestion.qname}\n                    onChange={handleInputChange}\n                    name=\"qname\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label htmlFor=\"description\">Question</label>\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  id=\"description\"\n                  value={currentQuestion.description}\n                  onChange={handleInputChange}\n                  name=\"description\"\n                />\n            </div>\n          </form>\n\n          <button className=\"badge badge-danger mr-2\" onClick={removeQuestion}>\n            Delete\n          </button>\n\n          <button\n            type=\"submit\"\n            className=\"badge badge-success\"\n            onClick={updateContent}\n          >\n            Update\n          </button>\n          <p>{message}</p>\n        </div>\n      ) : (\n        <div>\n          <br />\n          <p>Please click on a Question...</p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Question;","const c = `#include<stdio.h>\nint main() {\n    // your Code will come here\n    return 0;\n}\n`;\nconst cpp = `#include<bits/stdc++.h> \\nusing namespace std;\\n\\nint main() {\\n\\t//your Code will come here\\n\\treturn 0;\\n}\n`;\n\nconst java = `class test {\n    public static void main(String args[]){\n        // your Code will come here\n    }\n}\n`;\n\nconst python = \"# your code will com\";\n\nconst javascript = \"// Write your code here \";\n\nexport const code = {\n  c,\n  cpp,\n  java,\n  python,\n  javascript,\n};","import { code } from \"../components/defaultCode\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case \"DISPLAY_OUTPUT\":\n      return {\n        ...state,\n        result: action.payload,\n      };\n\n    case \"CODE_CHANGE\":\n      return {\n        ...state,\n        code: action.payload,\n      };\n\n    case \"PREVIOUS_INPUT\":\n      return {\n        ...state,\n        input: action.payload\n      };\n\n    case \"INPUT_CHANGE\":\n      return {\n        ...state,\n        input: action.payload,\n      };\n    case \"LANG_CHANGE\":\n      if (action.payload === \"cpp\") {\n        return {\n          ...state,\n          lang: action.payload,\n          code: code.cpp,\n        };\n      } else if (action.payload === \"c\") {\n        return {\n          ...state,\n          lang: action.payload,\n          code: code.c,\n        };\n      } else if (action.payload === \"java\") {\n        return {\n          ...state,\n          lang: action.payload,\n          code: code.java,\n        };\n      } else if (action.payload === \"python\") {\n        return {\n          ...state,\n          lang: action.payload,\n          code: code.python,\n        };\n      } else if (action.payload === \"javascript\") {\n        return {\n          ...state,\n          lang: action.payload,\n          code: code.javascript,\n        };\n      }\n\n    default:\n      return state;\n  }\n};","import React, { useContext } from \"react\";\n// import \"../CSS/Options.css\";\nimport { GlobalContext } from \"../context/GlobalState\";\n// import secret from \"../secret\";\nimport Dropdown from 'react-dropdown';\nimport 'react-dropdown/style.css';\nimport Select from \"react-select\";\nimport axios from \"axios\";\n\nfunction Options() {\n  const { code } = useContext(GlobalContext);\n  const { lang } = useContext(GlobalContext);\n  const { result } = useContext(GlobalContext);\n  const { handleLangChange } = useContext(GlobalContext);\n  const { handleInputChange } = useContext(GlobalContext);\n  const { input } = useContext(GlobalContext);\n  const { displayOutput } = useContext(GlobalContext);\n  const { download } = useContext(GlobalContext);\n  const { loadPreviousInput } = useContext(GlobalContext);\n  const { storePreviousInput } = useContext(GlobalContext);\n\n  const state = {\n    code: code,\n    result: result,\n    lang: lang,\n    input: input\n  };\n\n  console.log(state);\n  \n  // const options = [\"python\", \"java\", \"cpp\", \"c\", \"javascript\"];\n  // const defaultOption = options[0];\n\n  const options = [\n    { value: \"python\", label: \"python\" },\n    { value: \"java\", label: \"java\" },\n    { value: \"cpp\", label: \"cpp\" },\n    { value: \"c\", label: \"c\" }\n  ];\n\n  const onSubmitHandler = e => {\n    e.preventDefault();\n    console.log(GlobalContext);\n    // handleLangChange(\"java\");\n    alert(\"Submit Code\");\n    axios\n      .post(`http://192.168.1.8:8080/api/code/submit`, state)\n      .then(res => {\n        console.log(\"this is it\" + JSON.stringify(res.data));\n        const data = res.data;\n\n        if (data.err) {\n          // Error in user code\n          console.log(\"options\" + state);\n          if (\n            data.output ==\n            \"RangeError [ERR_CHILD_PROCESS_STDIO_MAXBUFFER]: stdout maxBuffer length exceeded\"\n          ) {\n            alert(\"Possible infinite loop or recurssion call\");\n          }\n          displayOutput(data.error);\n        }\n        displayOutput(data.output);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n\n\n  return (\n    <>\n      <div className=\"options\">\n        <div className=\"optionsbox1\">\n          <div className=\"btncont\">\n            <button className=\"optionsbtn\" onClick={onSubmitHandler}>\n              Run\n              <span className=\"btnicon\">\n                <img src=\"\" />\n              </span>\n            </button>\n\n            <button className=\"optionsbtn\" onClick={download}>\n              Download\n              <span className=\"btnicon\">\n                <img src=\"\" />\n              </span>\n            </button>\n            <button className=\"optionsbtn\" onClick={storePreviousInput}>\n              Store Input\n            </button>\n            <button className=\"optionsbtn\" onClick={loadPreviousInput}>\n              Load Input\n            </button>\n          </div>\n          {/* <Dropdown\n            className=\"dropdwn\"\n            options={options}\n            onChange={option => handleLangChange(option.value)}\n          /> */}\n          <Select\n            className=\"select\"\n            options={options}\n            onChange={option => handleLangChange(option.value)}\n          />\n        </div>\n        <div className=\"optionsbox2\">\n          <textarea\n            className=\"optionswritearea\"\n            placeholder={input}\n            onChange={e => {\n              handleInputChange(e.target.value);\n            }}\n          ></textarea>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Options;","import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n// import \"../CSS/OutputArea.css\";\n\nfunction OutputArea() {\n  const { result } = useContext(GlobalContext);\n  return (\n    <div className=\"outputarea\">\n      {console.log(\"outputara \" + result)}\n      <textarea className=\"textarea\" value={result}></textarea>\n    </div>\n  );\n}\n\nexport default OutputArea;","import React, { useContext } from \"react\";\nimport MonacoEditor from \"@monaco-editor/react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport Options from \"./Options\";\nimport Output from \"./Output\";\n// import \"../CSS/CodeArea.css\";\n\nfunction CodeArea({ onCodeChangeHandler }) {\n  const { code } = useContext(GlobalContext);\n\n  const { lang } = useContext(GlobalContext);\n\n  const { handleCodeChange } = useContext(GlobalContext);\n\n  const inputChangeHandler = e => {\n    return {\n      input: e.target.value\n    };\n  };\n\n  const options = {\n    selectOnLineNumbers: true,\n    renderIndentGuides: true,\n    colorDecorators: true,\n    cursorBlinking: \"blink\",\n    autoClosingQuotes: \"always\",\n    find: {\n      autoFindInSelection: \"always\"\n    },\n    snippetSuggestions: \"inline\"\n  };\n\n  const editorDidMount = e => {\n    console.log(\"Editor Mounted\");\n  };\n\n\n  return (\n    <>\n      <div className=\"codearea\">\n        <Options/>\n        <div className=\"codewritearea\">\n          <MonacoEditor\n            width=\"100%\"\n            height=\"80vh\"\n            // defaultlanguage = \"cpp\"\n            theme=\"hc-black\"\n            value={code}\n            options={options}\n            onChange={newCode => handleCodeChange(newCode)}\n            editorDidMount={editorDidMount}\n          />\n        </div>\n        <Output/>\n      </div>\n    </>\n  );\n}\n\nexport default CodeArea;","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","const eventBus = {\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport AddUser from \"./components/AddUser\";\nimport User from \"./components/User\";\nimport UsersList from \"./components/UsersList\";\nimport AddQuestion from \"./components/AddQuestion\";\nimport QuestionsList from \"./components/QuestionsList\";\nimport Question from \"./components/Question\";\nimport { logout } from \"./actions/auth\";\nimport { clearMessage } from \"./actions/message\";\nimport { GlobalProvider } from \"./context/GlobalState\";\nimport  Editor from \"./components/Editor\";\nimport { history } from \"./helpers/history\";\n\n// import AuthVerify from \"./common/AuthVerify\";\nimport EventBus from \"./common/EventBus\";\n\nconst App = () => {\n  const [showModeratorBoard, setShowModeratorBoard] = useState(false);\n  const [showAdminBoard, setShowAdminBoard] = useState(false);\n  const [showStudentBoard, setShowStudentBoard] = useState(false);\n\n  const { user: currentUser } = useSelector((state) => state.auth);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    history.listen((location) => {\n      dispatch(clearMessage()); // clear message when changing location\n    });\n  }, [dispatch]);\n\n  const logOut = useCallback(() => {\n    dispatch(logout());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentUser) {\n      setShowStudentBoard(currentUser.roles.includes(\"ROLE_STUDENT\"))\n      setShowModeratorBoard(currentUser.roles.includes(\"ROLE_PROFESSOR\"));\n      setShowAdminBoard(currentUser.roles.includes(\"ROLE_ADMIN\"));\n    } else {\n      setShowModeratorBoard(false);\n      setShowAdminBoard(false);\n      setShowStudentBoard(false);\n    }\n\n    EventBus.on(\"logout\", () => {\n      logOut();\n    });\n\n    return () => {\n      EventBus.remove(\"logout\");\n    };\n  }, [currentUser, logOut]);\n\n  return (\n    <GlobalProvider>\n    <Router history={history}>\n      <div>\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n          <Link to={\"/\"} className=\"navbar-brand\">\n            Opencoder\n          </Link>\n          <div className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to={\"/home\"} className=\"nav-link\">\n                Home\n              </Link>\n            </li>\n\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/addquestion\"} className=\"nav-link\">\n                  Add Questions\n                </Link>\n              </li>\n            )}\n            {showModeratorBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/questions\"} className=\"nav-link\">\n                  Questions\n                </Link>\n              </li>\n            )}\n            {/* remove this */}\n            {showStudentBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/editor\"} className=\"nav-link\">\n                  Editor\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/adduser\"} className=\"nav-link\">\n                  Add User\n                </Link>\n              </li>\n            )}\n\n            {showAdminBoard && (\n              <li className=\"nav-item\">\n                <Link to={\"/users\"} className=\"nav-link\">\n                  Users\n                </Link>\n              </li>\n            )}\n          </div>\n\n          {currentUser ? (\n            <div className=\"navbar-nav ms-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/profile\"} className=\"nav-link\">\n                  {currentUser.username}\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <a href=\"/login\" className=\"nav-link\" onClick={logOut}>\n                  LogOut\n                </a>\n              </li>\n            </div>\n          ) : (\n            <div className=\"navbar-nav ms-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/login\"} className=\"nav-link\">\n                  Login\n                </Link>\n              </li>\n\n              <li className=\"nav-item\">\n                <Link to={\"/register\"} className=\"nav-link\">\n                  Sign Up\n                </Link>\n              </li>\n            </div>\n          )}\n        </nav>\n\n        <div className=\"container mt-3\">\n          <Switch>\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\n            <Route exact path=\"/login\" component={Login} />\n            <Route exact path=\"/register\" component={Register} />\n            <Route exact path=\"/profile\" component={Profile} />\n            <Route path=\"/addquestion\" component={AddQuestion} />\n            <Route path=\"/adduser\" component={AddUser} />\n            <Route path=\"/users/:id\" component={User} />\n            <Route path=\"/users\" component={UsersList} />\n            <Route path=\"/editor\" component={Editor} />\n            <Route path=\"/questions/:id\" component={Question} />\n            <Route path=\"/questions\" component={QuestionsList} />\n          </Switch>\n        </div>\n\n        {/* <AuthVerify logOut={logOut}/> */}\n      </div>\n    </Router>\n    </GlobalProvider>\n  );\n};\n\nexport default App;\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can chađinge\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}